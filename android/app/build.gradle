apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services"

react {
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = false

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.acne_detect_app"
    defaultConfig {
        applicationId "com.acne_detect_app"  // Firebase'le aynı olacak
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        resValue "string", "build_config_package", "com.acne_detect_app"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    
    // Hermes veya JSC
    def hermesEnabled = true // veya false
    if (hermesEnabled) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation 'io.github.react-native-community:jsc-android:2026004.+'
    }

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:33.13.0') // BoM
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    
    
    // Diğer Firebase modülleri (ihtiyaca göre)
    // implementation 'com.google.firebase:firebase-analytics'
    // implementation 'com.google.firebase:firebase-messaging'
}
